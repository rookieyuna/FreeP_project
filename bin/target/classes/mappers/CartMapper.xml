<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace ="cart.CartImpl">
  
  	<select id="listPage" resultType="cart.CartDTO">
  	
  		select ct_idx, ct_name, ct_count, p_sfile, p_size, p_price
			from cart C, product P
			where 
    			C.ct_code = P.p_code
   				and C.m_code = #{param1}
  	</select>
  	
  	<select id="listPagediy" resultType="cart.CartDTO">
  	
  		select ct_idx, ct_name, ct_count,ct_code, d_price, dough, sauce, topping1, topping2, topping3, topping4, topping5
			from cart C, diy d
			where 
    			C.ct_code = d.diy_idx
   				and C.m_code = #{param1}
  	</select>
  	<!-- 토핑들 idx값만 가져오기 -->
  	<select id="takeTopping" resultType="cart.CartDTO">
  		select topping1,topping2, topping3, topping4, topping5 from diy where diy_idx = #{param1}
  	</select>
 
  	<select id="objectdiy" resultType="cart.CartDTO">
  	
  		select p_name, p_price, p_size 
		from product
		where p_code = #{param1}
  	</select>

	<select id="sum1" resultType="int">
	select nvl(sum(p_price * ct_count),0)
			from cart C, product P 
			where 
    			C.ct_code = P.p_code
   				and C.m_code = #{param1}
	</select>
	<select id="sum2" resultType="int">
	select nvl(sum(d_price * ct_count),0)
			from cart C, diy d
			where 
    			C.ct_code = d.diy_idx
   				and C.m_code = #{param1}
	</select> 
	
	<delete id="deleteCart">
		delete from cart where ct_idx=#{param1}
	</delete>
	

	<delete id="deleteCartall">
		delete from cart where m_code=#{param1}
	</delete>
 
	<update id="updateCart">
		update cart set ct_count=ct_count + #{param1} where ct_idx=#{param2}
		
	</update>
 

	<select id="confirmCart" parameterType="java.util.HashMap" resultType="int">
		select count(*) from cart where m_code=#{m_code} and ct_code=#{ct_code}
	</select>
	<update id="updateCountCart"  parameterType="java.util.HashMap" >
		update cart set ct_count=ct_count + #{ct_count} where ct_code=#{ct_code} and  m_code=#{m_code}
		
	</update>
	
	<select id="storeList" resultType="store.StoreVO">
		select * from (select St.*, rownum rNum from 
		(select round(DISTANCE_WGS84(#{param1},#{param2},s.latitude,s.longitude),2 )distance, 
		s.b_name, b_code, address, phone
from store s order by distance asc) St )where rNum between 1 and 5
	</select>
	
  </mapper>